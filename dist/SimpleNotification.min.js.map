{"version":3,"file":"SimpleNotification.min.js","sources":["../src/SimpleNotification.js"],"sourcesContent":["/**\r\n * @typedef {('top-left' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right')} Position\r\n */\r\n\r\n/**\r\n * @typedef {('success' | 'info' | 'error' | 'warning' | 'message')} Type\r\n */\r\n\r\n/**\r\n * @typedef InsertAnimationDefinition\r\n * @type {object}\r\n * @property {('default-insert'\r\n\t\t\t| 'insert-left'\r\n\t\t\t| 'insert-right'\r\n\t\t\t| 'insert-top'\r\n\t\t\t| 'insert-bottom'\r\n\t\t\t| 'fadein'\r\n\t\t\t| 'scalein'\r\n\t\t\t| 'rotatein')} name\r\n * @property {number} duration - in ms\r\n */\r\n\r\n/**\r\n * @typedef RemoveAnimationDefinition\r\n * @type {object}\r\n * @property {('fadeout' | 'scaleout' | 'rotateout')} name\r\n * @property {number} duration in ms\r\n */\r\n\r\n/**\r\n * @typedef EventCallback\r\n * @type {function}\r\n * @param {SimpleNotification} notification\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @typedef OnCloseCallback\r\n * @type {function}\r\n * @param {SimpleNotification} notification\r\n * @param {boolean} [fromUser=false]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @typedef Events\r\n * @type {object}\r\n * @property {EventCallback} [onCreate];\r\n * @property {EventCallback} [onDisplay];\r\n * @property {EventCallback} [onDeath];\r\n * @property {OnCloseCallback} [onClose];\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n * @type {object}\r\n * @property {Position} position\r\n * @property {number} maxNotifications\r\n * @property {boolean} removeAllOnDisplay\r\n * @property {boolean} pauseOnHover\r\n * @property {boolean} closeOnClick\r\n * @property {boolean} closeButton\r\n * @property {number} duration\r\n * @property {boolean} sticky\r\n * @property {Events} events\r\n * @property {InsertAnimationDefinition} insertAnimation\r\n * @property {RemoveAnimationDefinition} removeAnimation\r\n */\r\n\r\n/**\r\n * @typedef Button\r\n * @type {object}\r\n * @property {Type} [type]\r\n * @property {string} [value]\r\n * @property {EventCallback} [onClick]\r\n */\r\n\r\n/**\r\n * @typedef Content\r\n * @type {object}\r\n * @property {string} [image]\r\n * @property {string} [text]\r\n * @property {string} [title]\r\n * @property {Button[]} [buttons]\r\n */\r\n\r\n/**\r\n * @typedef TagDescription\r\n * @type {object}\r\n * @property {string} type\r\n * @property {string} class\r\n * @property {string} open\r\n * @property {string} close\r\n * @property {{ textContent: string | boolean } & Object.<string, number>} attributes\r\n * @property {string} textContent\r\n */\r\n\r\nexport default class SimpleNotification {\r\n\t/**\r\n\t * @param {Partial<Options>} [options]\r\n\t */\r\n\tconstructor(options = undefined) {\r\n\t\t/** @type {DocumentFragment} */\r\n\t\tthis.fragment = new DocumentFragment();\r\n\t\t/** @type {Options} */\r\n\t\tthis.options = options;\r\n\t\tif (this.options == undefined) {\r\n\t\t\tthis.options = SimpleNotification.deepAssign({}, SimpleNotification._options);\r\n\t\t}\r\n\t\t/** @type {Events} */\r\n\t\tthis.events = this.options.events;\r\n\t\t/** @type {HTMLElement | undefined} */\r\n\t\tthis.node = undefined;\r\n\t\t// Content\r\n\t\t/** @type {string | undefined} */\r\n\t\tthis.title = undefined;\r\n\t\t/** @type {HTMLElement | undefined} */\r\n\t\tthis.closeButton = undefined;\r\n\t\t/** @type {HTMLElement | undefined} */\r\n\t\tthis.body = undefined;\r\n\t\t/** @type {HTMLImageElement | undefined} */\r\n\t\tthis.image = undefined;\r\n\t\t/** @type {string | undefined} */\r\n\t\tthis.text = undefined;\r\n\t\t/** @type {HTMLElement | undefined} */\r\n\t\tthis.buttons = undefined;\r\n\t\t/** @type {HTMLElement | undefined} */\r\n\t\tthis.progressBar = undefined;\r\n\t\t// Functions\r\n\t\t/** @type {() => void} */\r\n\t\tthis.addExtinguish = this.addExtinguishFct.bind(this);\r\n\t\t/** @type {() => void} */\r\n\t\tthis.removeExtinguish = this.removeExtinguishFct.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {object} target\r\n\t * @param {object[]} objs\r\n\t * @returns {object}\r\n\t */\r\n\tstatic deepAssign(target, ...objs) {\r\n\t\tfor (let i = 0, max = objs.length; i < max; i++) {\r\n\t\t\tfor (var k in objs[i]) {\r\n\t\t\t\tif (objs[i][k] != null && typeof objs[i][k] == 'object')\r\n\t\t\t\t\ttarget[k] = SimpleNotification.deepAssign(target[k] ? target[k] : {}, objs[i][k]);\r\n\t\t\t\telse target[k] = objs[i][k];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the default options of SimpleNotification\r\n\t * @param {Partial<Options>} options Options object to override the defaults\r\n\t */\r\n\tstatic options(options) {\r\n\t\tSimpleNotification._options = SimpleNotification.deepAssign({}, SimpleNotification._options, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a wrapper and add it to the wrappers object\r\n\t * Valid default position: top-left, top-right, bottom-left, bottom-center, bottom-right\r\n\t * @param {string} position The position of the wrapper\r\n\t */\r\n\tstatic makeWrapper(position) {\r\n\t\tlet wrapper = document.createElement('div');\r\n\t\twrapper.className = `gn-wrapper gn-${position}`;\r\n\t\tdocument.body.appendChild(wrapper);\r\n\t\tSimpleNotification.wrappers[position] = wrapper;\r\n\t}\r\n\r\n\t/**\r\n\t * Search the first occurence of the char occurence in text that doesn't have a \\ prefix\r\n\t * @param {string} text The text where to search the char in\r\n\t * @param {string} char The string to search in the text\r\n\t * @param {number} start The position to begin to search with\r\n\t * @returns {number | undefined}\r\n\t */\r\n\tstatic firstUnbreakChar(text, char, start = 0) {\r\n\t\tif (start < 0) start = 0;\r\n\t\tlet foundPos;\r\n\t\twhile (start >= 0) {\r\n\t\t\tfoundPos = text.indexOf(char, start);\r\n\t\t\tif (foundPos > 0 && text[foundPos - 1] == '\\\\') {\r\n\t\t\t\tstart = foundPos + 1;\r\n\t\t\t} else {\r\n\t\t\t\tstart = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn foundPos;\r\n\t}\r\n\r\n\t/**\r\n\t * Search the first shortest occurence of token in the string array string after position start in the current string\r\n\t * @param {string} string\r\n\t * @param {string} token\r\n\t * @param {number} start\r\n\t * @returns {[number, number]}\r\n\t */\r\n\tstatic searchToken(string, token, start) {\r\n\t\tlet found = [start[0], start[1]];\r\n\t\tfor (let max = string.length; found[0] < max; found[0]++) {\r\n\t\t\tif (typeof string[found[0]] == 'string' && (found[1] = string[found[0]].indexOf(token, found[1])) > -1) {\r\n\t\t\t\treturn found;\r\n\t\t\t}\r\n\t\t\tfound[1] = 0;\r\n\t\t}\r\n\t\treturn [-1, -1];\r\n\t}\r\n\r\n\t/**\r\n\t * Break a string with a `tag` element at position start until end\r\n\t * @param {string} string\r\n\t * @param {TagDescription} tag\r\n\t * @param {string} token\r\n\t * @param {number} start\r\n\t * @returns {[number, number]}\r\n\t */\r\n\tstatic breakString(string, tag, start, end) {\r\n\t\tlet tagLength = { open: tag.open.length, close: tag.close.length };\r\n\t\tif (start[0] != end[0]) {\r\n\t\t\tlet inside = { tag: tag, str: [string[start[0]].substring(start[1])] };\r\n\t\t\tlet c = 0;\r\n\t\t\tfor (let i = start[0] + 1; i < end[0]; i++, c++) {\r\n\t\t\t\tinside.str.push(string[i]);\r\n\t\t\t}\r\n\t\t\tinside.str.push(string[end[0]].substring(0, end[1]));\r\n\t\t\tinside.str = [this.joinString(inside.str)];\r\n\t\t\tstring.splice(start[0] + 1, c, inside);\r\n\t\t\tend[0] = start[0] + 2;\r\n\t\t\tstring[start[0]] = string[start[0]].substring(0, start[1] - tagLength.open);\r\n\t\t\tstring[end[0]] = string[end[0]].substring(end[1] + tagLength.close);\r\n\t\t\treturn [end[0], 0];\r\n\t\t} else {\r\n\t\t\tstring.splice(\r\n\t\t\t\tstart[0] + 1,\r\n\t\t\t\t0,\r\n\t\t\t\t{ tag: tag, str: [string[start[0]].substring(start[1], end[1])] },\r\n\t\t\t\tstring[start[0]].substring(end[1] + tagLength.close)\r\n\t\t\t);\r\n\t\t\tstring[start[0]] = string[start[0]].substring(0, start[1] - tagLength.open);\r\n\t\t\treturn [start[0] + 2, 0];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Recursive string array concatenation\r\n\t * @param {string[]} arr\r\n\t * @returns {string}\r\n\t */\r\n\tstatic joinString(arr) {\r\n\t\tlet str = [];\r\n\t\tfor (let i = 0, max = arr.length; i < max; i++) {\r\n\t\t\tif (typeof arr[i] == 'string') {\r\n\t\t\t\tstr.push(arr[i]);\r\n\t\t\t} else {\r\n\t\t\t\tstr.push(arr[i].tag.open);\r\n\t\t\t\tstr.push(this.joinString(arr[i].str));\r\n\t\t\t\tstr.push(arr[i].tag.close);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Make the node body by build each of it's childrens\r\n\t * @param {string} string\r\n\t * @param {HTMLElement} node\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic buildNode(string, node) {\r\n\t\tfor (let i = 0; i < string.length; i++) {\r\n\t\t\tif (typeof string[i] == 'string') {\r\n\t\t\t\tif (string[i].length > 0) {\r\n\t\t\t\t\tnode.appendChild(document.createTextNode(string[i]));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet tagInfo = string[i].tag;\r\n\t\t\t\tlet tag = document.createElement(tagInfo.type);\r\n\t\t\t\tif (tagInfo.type == 'a' || tagInfo.type == 'button') {\r\n\t\t\t\t\ttag.addEventListener('click', (event) => {\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// Content\r\n\t\t\t\tlet title;\r\n\t\t\t\tlet content = this.joinString(string[i].str);\r\n\t\t\t\tif ('title' in tagInfo && tagInfo.title && content.length > 0) {\r\n\t\t\t\t\tif (content.indexOf('!') == 0) {\r\n\t\t\t\t\t\tcontent = content.substring(1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// find |\r\n\t\t\t\t\t\tlet foundTitleBreak = this.firstUnbreakChar(content, '|');\r\n\t\t\t\t\t\tcontent = content.replace('\\\\|', '|');\r\n\t\t\t\t\t\tif (foundTitleBreak > -1) {\r\n\t\t\t\t\t\t\ttitle = content.substring(0, foundTitleBreak);\r\n\t\t\t\t\t\t\tcontent = content.substring(foundTitleBreak + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (title == undefined) {\r\n\t\t\t\t\ttitle = content;\r\n\t\t\t\t}\r\n\t\t\t\t// Set attributes\r\n\t\t\t\tif ('attributes' in tagInfo) {\r\n\t\t\t\t\tlet keys = Object.keys(tagInfo.attributes);\r\n\t\t\t\t\tfor (let k = 0, max = keys.length; k < max; k++) {\r\n\t\t\t\t\t\tlet attributeValue = tagInfo.attributes[keys[k]]\r\n\t\t\t\t\t\t\t.replace('$content', content)\r\n\t\t\t\t\t\t\t.replace('$title', title);\r\n\t\t\t\t\t\ttag.setAttribute(keys[k], attributeValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (tagInfo.textContent) {\r\n\t\t\t\t\ttag.textContent = tagInfo.textContent.replace('$content', content).replace('$title', title);\r\n\t\t\t\t} else if (tagInfo.textContent != false) {\r\n\t\t\t\t\tthis.textToNode(string[i].str, tag);\r\n\t\t\t\t}\r\n\t\t\t\t// Set a class if defined\r\n\t\t\t\tif (tagInfo.class) {\r\n\t\t\t\t\tif (Array.isArray(tagInfo.class)) {\r\n\t\t\t\t\t\tfor (let i = 0, max = tagInfo.class.length; i < max; i++) {\r\n\t\t\t\t\t\t\ttag.classList.add(tagInfo.class[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttag.className = tagInfo.class;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(tag);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * Transform a text with tags to a DOM node\r\n\t * {open}{content}{close}\r\n\t * {open}{!|title|}{content}{close} | is the title/content separator\r\n\t * @param {string} text The text with tags\r\n\t * @param {object} node The node where the text will be added\r\n\t * @returns {HTMLElement | undefined}\r\n\t */\r\n\tstatic textToNode(text, node) {\r\n\t\tif (text == undefined) return;\r\n\t\tlet string;\r\n\t\tif (Array.isArray(text)) {\r\n\t\t\tstring = text;\r\n\t\t} else {\r\n\t\t\t// Normalize linebreak\r\n\t\t\ttext = text.replace(/(\\r?\\n|\\r)/gm, '\\n');\r\n\t\t\tstring = [text];\r\n\t\t}\r\n\t\t// Break string by tokens\r\n\t\tif (this.tokens == undefined || this.refreshTokens != undefined) {\r\n\t\t\tthis.tokens = Object.keys(SimpleNotification.tags);\r\n\t\t\tthis.refreshTokens = undefined;\r\n\t\t}\r\n\t\tfor (let i = 0, last = this.tokens.length; i < last; i++) {\r\n\t\t\tlet tag = SimpleNotification.tags[this.tokens[i]];\r\n\t\t\tlet tagLength = { open: tag.open.length, close: tag.close.length };\r\n\t\t\tlet continueAt = [0, 0];\r\n\t\t\tlet openPos = [0, 0];\r\n\t\t\tlet closePos = [0, 0];\r\n\t\t\twhile ((openPos = this.searchToken(string, tag.open, continueAt))[0] > -1) {\r\n\t\t\t\topenPos[1] += tagLength.open;\r\n\t\t\t\tif ((closePos = this.searchToken(string, tag.close, openPos))[0] > -1) {\r\n\t\t\t\t\tcontinueAt = this.breakString(string, tag, openPos, closePos);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinueAt = openPos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.buildNode(string, node);\r\n\t}\r\n\r\n\t/**\r\n\t * Create the notification node, set it's classes and call the onCreate event\r\n\t * @param {string[]} classes\r\n\t */\r\n\tmake(classes) {\r\n\t\tthis.node = document.createElement('div');\r\n\t\tthis.fragment.appendChild(this.node);\r\n\t\t// Apply Style\r\n\t\tthis.node.className = 'gn-notification gn-insert';\r\n\t\tif (this.options.insertAnimation.name == 'default-insert') {\r\n\t\t\tswitch (this.options.position) {\r\n\t\t\t\tcase 'top-left':\r\n\t\t\t\tcase 'bottom-left':\r\n\t\t\t\t\tthis.options.insertAnimation.name = 'insert-left';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'top-right':\r\n\t\t\t\tcase 'bottom-right':\r\n\t\t\t\t\tthis.options.insertAnimation.name = 'insert-right';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'top-center':\r\n\t\t\t\t\tthis.options.insertAnimation.name = 'insert-top';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bottom-center':\r\n\t\t\t\t\tthis.options.insertAnimation.name = 'insert-bottom';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.options.insertAnimation.name == this.options.removeAnimation.name) {\r\n\t\t\tif (this.options.insertAnimation.name == 'fadeout') {\r\n\t\t\t\tthis.options.removeAnimation.name = 'rotateout';\r\n\t\t\t} else {\r\n\t\t\t\tthis.options.removeAnimation.name = 'fadeout';\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.node.style.animationName = this.options.insertAnimation.name;\r\n\t\tthis.node.style.animationDuration = `${this.options.insertAnimation.duration}ms`;\r\n\t\tclasses.forEach((className) => {\r\n\t\t\tthis.node.classList.add(className);\r\n\t\t});\r\n\t\t// AnimationEnd listener for the different steps of a notification\r\n\t\tthis.node.addEventListener('animationend', (event) => {\r\n\t\t\tif (event.animationName == this.options.removeAnimation.name) {\r\n\t\t\t\tthis.close(false);\r\n\t\t\t} else if (event.animationName == this.options.insertAnimation.name) {\r\n\t\t\t\tthis.node.classList.remove('gn-insert');\r\n\t\t\t\t// Reset notification duration when hovering\r\n\t\t\t\tif (!this.options.sticky && this.options.pauseOnHover) {\r\n\t\t\t\t\tthis.node.addEventListener('mouseenter', this.removeExtinguish);\r\n\t\t\t\t\tthis.node.addEventListener('mouseleave', this.addExtinguish);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.progressBar) {\r\n\t\t\t\t\t// Set the time before removing the notification\r\n\t\t\t\t\tthis.progressBar.style.animationDuration = `${this.options.duration}ms`;\r\n\t\t\t\t\tif (document.hasFocus()) {\r\n\t\t\t\t\t\tthis.progressBar.classList.add('gn-extinguish');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Start the extinguish animation only when the page is focused\r\n\t\t\t\t\t\tlet addFocusExtinguish = () => {\r\n\t\t\t\t\t\t\tthis.progressBar.classList.add('gn-extinguish');\r\n\t\t\t\t\t\t\tdocument.removeEventListener('focus', addFocusExtinguish);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tdocument.addEventListener('focus', addFocusExtinguish);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (event.animationName == 'shorten' && this.progressBar) {\r\n\t\t\t\tif (!this.options.sticky && this.options.pauseOnHover) {\r\n\t\t\t\t\tthis.node.removeEventListener('mouseenter', this.removeExtinguish);\r\n\t\t\t\t\tthis.node.removeEventListener('mouseleave', this.addExtinguish);\r\n\t\t\t\t}\r\n\t\t\t\tthis.progressBar.classList.add('gn-retire');\r\n\t\t\t\tif (this.events.onDeath) {\r\n\t\t\t\t\tthis.events.onDeath(this);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.disableButtons();\r\n\t\t\t\t\tthis.closeAnimated();\r\n\t\t\t\t\t// TODO: Add event listener to pause closing\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t// Delete the notification on click\r\n\t\tif (this.options.closeOnClick) {\r\n\t\t\tthis.node.title = 'Click to close.';\r\n\t\t\tthis.node.classList.add('gn-close-on-click');\r\n\t\t\tthis.node.addEventListener('click', () => {\r\n\t\t\t\tthis.close(true);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// Fire onCreateEvent\r\n\t\tif (this.events.onCreate) {\r\n\t\t\tthis.events.onCreate(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the type of the notification\r\n\t * success, info, error, warning, message\r\n\t * It can be another CSS class but `type` will be prepended with `gn-`\r\n\t * @param {Type} type\r\n\t */\r\n\tsetType(type) {\r\n\t\tif (this.node) {\r\n\t\t\tlet closeOnClick = this.node.classList.contains('gn-close-on-click');\r\n\t\t\tthis.node.className = `gn-notification gn-${type}`;\r\n\t\t\tif (closeOnClick) {\r\n\t\t\t\tthis.node.classList.add('gn-close-on-click');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the title of the notification\r\n\t * @param {string} title\r\n\t */\r\n\tsetTitle(title) {\r\n\t\tif (this.title == undefined) {\r\n\t\t\tthis.title = document.createElement('h1');\r\n\t\t\tthis.node.insertBefore(this.title, this.node.firstElementChild);\r\n\t\t\tif (this.closeButton) {\r\n\t\t\t\tthis.title.appendChild(this.closeButton);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.title.title = title;\r\n\t\tthis.title.textContent = title;\r\n\t}\r\n\r\n\t/**\r\n\t * Add a close button to the top right of the notification\r\n\t */\r\n\taddCloseButton() {\r\n\t\tlet closeButton = document.createElement('span');\r\n\t\tcloseButton.title = 'Click to close.';\r\n\t\tcloseButton.className = 'gn-close';\r\n\t\tcloseButton.textContent = '\\u274C';\r\n\t\tcloseButton.addEventListener('click', () => {\r\n\t\t\tthis.close(true);\r\n\t\t});\r\n\t\tif (this.title) {\r\n\t\t\tcloseButton.classList.add('gn-close-title');\r\n\t\t\tthis.title.appendChild(closeButton);\r\n\t\t} else {\r\n\t\t\tthis.node.insertBefore(closeButton, this.node.firstElementChild);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add the notification body that contains the notification image and text\r\n\t */\r\n\taddBody() {\r\n\t\tthis.body = document.createElement('div');\r\n\t\tthis.body.className = 'gn-content';\r\n\t\tthis.node.appendChild(this.body);\r\n\t\tif (this.buttons) {\r\n\t\t\tthis.node.insertBefore(this.body, this.buttons);\r\n\t\t} else if (this.progressBar) {\r\n\t\t\tthis.node.insertBefore(this.body, this.progressBar);\r\n\t\t} else {\r\n\t\t\tthis.node.appendChild(this.body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the image src attribute\r\n\t * @param {string} src\r\n\t */\r\n\tsetImage(src) {\r\n\t\tif (this.image == undefined) {\r\n\t\t\tthis.image = document.createElement('img');\r\n\t\t\tif (this.text) {\r\n\t\t\t\tthis.body.insertBefore(this.image, this.text);\r\n\t\t\t} else {\r\n\t\t\t\tif (!this.body) {\r\n\t\t\t\t\tthis.addBody();\r\n\t\t\t\t}\r\n\t\t\t\tthis.body.appendChild(this.image);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.image.src = src;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the text content of the notification body\r\n\t * @param {string} content\r\n\t */\r\n\tsetText(content) {\r\n\t\tif (this.text == undefined) {\r\n\t\t\tthis.text = document.createElement('div');\r\n\t\t\tthis.text.className = 'gn-text';\r\n\t\t\tif (!this.body) {\r\n\t\t\t\tthis.addBody();\r\n\t\t\t}\r\n\t\t\tthis.body.appendChild(this.text);\r\n\t\t} else {\r\n\t\t\twhile (this.text.firstChild) {\r\n\t\t\t\tthis.text.removeChild(this.text.firstChild);\r\n\t\t\t}\r\n\t\t}\r\n\t\tSimpleNotification.textToNode(content, this.text);\r\n\t}\r\n\r\n\t/**\r\n\t * Add a single button after all already added buttons\r\n\t * @param {Button} options\r\n\t */\r\n\taddButton(options) {\r\n\t\tif (!options.type || !options.value) return;\r\n\t\tif (this.buttons == undefined) {\r\n\t\t\tthis.buttons = document.createElement('div');\r\n\t\t\tthis.buttons.className = 'gn-buttons';\r\n\t\t\tif (this.progressBar) {\r\n\t\t\t\tthis.node.insertBefore(this.buttons, this.progressBar);\r\n\t\t\t} else {\r\n\t\t\t\tthis.node.appendChild(this.buttons);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet button = document.createElement('button');\r\n\t\tSimpleNotification.textToNode(options.value, button);\r\n\t\tbutton.className = `gn-button gn-${options.type}`;\r\n\t\tif (options.onClick) {\r\n\t\t\tbutton.addEventListener('click', (event) => {\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\toptions.onClick(this);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.buttons.appendChild(button);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove all buttons\r\n\t */\r\n\tremoveButtons() {\r\n\t\tif (this.buttons) {\r\n\t\t\tthis.node.removeChild(this.buttons);\r\n\t\t\tthis.buttons = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add the notification progress bar\r\n\t */\r\n\taddProgressBar() {\r\n\t\tthis.progressBar = document.createElement('span');\r\n\t\tthis.progressBar.className = 'gn-lifespan';\r\n\t\tthis.node.appendChild(this.progressBar);\r\n\t}\r\n\r\n\t/**\r\n\t * Append the notification body to it's wrapper and call the onDisplay event\r\n\t */\r\n\tdisplay() {\r\n\t\tif (this.node) {\r\n\t\t\tif (this.options.removeAllOnDisplay) {\r\n\t\t\t\tSimpleNotification.displayed.forEach((n) => {\r\n\t\t\t\t\tn.remove();\r\n\t\t\t\t});\r\n\t\t\t} else if (this.options.maxNotifications > 0) {\r\n\t\t\t\tlet diff = -(this.options.maxNotifications - (SimpleNotification.displayed.length + 1));\r\n\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\tfor (let i = 0, max = diff; i < max; i++) {\r\n\t\t\t\t\t\tSimpleNotification.displayed[i].remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!SimpleNotification.wrappers[this.options.position]) {\r\n\t\t\t\tSimpleNotification.makeWrapper(this.options.position);\r\n\t\t\t}\r\n\t\t\tSimpleNotification.wrappers[this.options.position].appendChild(this.fragment);\r\n\t\t\tSimpleNotification.displayed.push(this);\r\n\t\t\tif (this.events.onDisplay) {\r\n\t\t\t\tthis.events.onDisplay(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the notification from the screen without calling the onClose event\r\n\t * @returns {boolean}\r\n\t */\r\n\tremove() {\r\n\t\tif (this.node != undefined) {\r\n\t\t\tthis.node.remove();\r\n\t\t\tthis.node = undefined;\r\n\t\t\tlet index = SimpleNotification.displayed.indexOf(this);\r\n\t\t\tif (index) {\r\n\t\t\t\tSimpleNotification.displayed.splice(index, 1);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the notification from the screen and call the onClose event\r\n\t * @param {boolean} fromUser\r\n\t */\r\n\tclose(fromUser = false) {\r\n\t\tif (this.remove() && this.events.onClose) {\r\n\t\t\tthis.events.onClose(this, fromUser);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remove reset events and add the fadeout animation\r\n\t */\r\n\tcloseAnimated() {\r\n\t\t// Add the fadeout animation\r\n\t\tthis.node.classList.add('gn-remove');\r\n\t\tthis.node.style.animationName = this.options.removeAnimation.name;\r\n\t\tthis.node.style.animationDuration = `${this.options.removeAnimation.duration}ms`;\r\n\t\t// Pause and reset fadeout on hover\r\n\t\tthis.node.addEventListener('mouseenter', (event) => {\r\n\t\t\tevent.target.classList.remove('gn-remove');\r\n\t\t});\r\n\t\tthis.node.addEventListener('mouseleave', (event) => {\r\n\t\t\tevent.target.classList.add('gn-remove');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add the class 'gn-extinguish' to the event target\r\n\t * Used in create() and closeAnimated() to be able to remove the eventListener.\r\n\t */\r\n\taddExtinguishFct() {\r\n\t\tthis.progressBar.classList.add('gn-extinguish');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the class 'gn-extinguish' to the event target\r\n\t * Used in create() and closeAnimated() to be able to remove the eventListener.\r\n\t */\r\n\tremoveExtinguishFct() {\r\n\t\tthis.progressBar.classList.remove('gn-extinguish');\r\n\t}\r\n\r\n\t/**\r\n\t * Add the disabled state to all displayed buttons\r\n\t */\r\n\tdisableButtons() {\r\n\t\tif (this.buttons) {\r\n\t\t\tfor (let i = 0, max = this.buttons.childNodes.length; i < max; i++) {\r\n\t\t\t\tthis.buttons.childNodes[i].disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Create and append a notification\r\n\t * content is an object with the keys title, text, image and buttons\r\n\t * Options: duration, fadeout, position\r\n\t * @param {array} classes Array of classes to add to the notification\r\n\t * @param {Content} content The content the notification\r\n\t * @param {Partial<Options>} options The options of the notifications\r\n\t * @returns {SimpleNotification}\r\n\t */\r\n\tstatic create(classes, content, notificationOptions = {}) {\r\n\t\tlet hasImage = 'image' in content && content.image,\r\n\t\t\thasText = 'text' in content && content.text,\r\n\t\t\thasTitle = 'title' in content && content.title,\r\n\t\t\thasButtons = 'buttons' in content;\r\n\t\t// Abort if empty\r\n\t\tif (!hasImage && !hasTitle && !hasText && !hasButtons) return;\r\n\t\t// Merge options\r\n\t\tlet options = SimpleNotification.deepAssign({}, SimpleNotification._options, notificationOptions);\r\n\t\t// Create the notification\r\n\t\tlet notification = new SimpleNotification(options);\r\n\t\tnotification.make(classes);\r\n\t\t// Add elements\r\n\t\tif (hasTitle) {\r\n\t\t\tnotification.setTitle(content.title);\r\n\t\t}\r\n\t\tif (options.closeButton) {\r\n\t\t\tnotification.addCloseButton();\r\n\t\t}\r\n\t\tif (hasImage) {\r\n\t\t\tnotification.setImage(content.image);\r\n\t\t}\r\n\t\tif (hasText) {\r\n\t\t\tnotification.setText(content.text);\r\n\t\t}\r\n\t\tif (hasButtons) {\r\n\t\t\tif (!Array.isArray(content.buttons)) {\r\n\t\t\t\tcontent.buttons = [content.buttons];\r\n\t\t\t}\r\n\t\t\tfor (let i = 0, max = content.buttons.length; i < max; i++) {\r\n\t\t\t\tnotification.addButton(content.buttons[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Add progress bar if not sticky\r\n\t\tif (!options.sticky) {\r\n\t\t\tnotification.addProgressBar();\r\n\t\t}\r\n\t\t// Display\r\n\t\tif (!('display' in options) || options.display) {\r\n\t\t\tnotification.display();\r\n\t\t}\r\n\t\treturn notification;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a notification with the 'success' style\r\n\t * @param {Content} content Content of the notification\r\n\t * @param {Partial<Options>} options Options used for the notification\r\n\t * @returns {SimpleNotification}\r\n\t */\r\n\tstatic success(content, options = {}) {\r\n\t\treturn this.create(['gn-success'], content, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a notification with the 'info' style\r\n\t * @param {Content} content Content of the notification\r\n\t * @param {Partial<Options>} options Options used for the notification\r\n\t * @returns {SimpleNotification}\r\n\t */\r\n\tstatic info(content, options = {}) {\r\n\t\treturn this.create(['gn-info'], content, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a notification with the 'error' style\r\n\t * @param {Content} content Content of the notification\r\n\t * @param {Partial<Options>} options Options used for the notification\r\n\t * @returns {SimpleNotification}\r\n\t */\r\n\tstatic error(content, options = {}) {\r\n\t\treturn this.create(['gn-error'], content, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a notification with the 'warning' style\r\n\t * @param {Content} content Content of the notification\r\n\t * @param {Partial<Options>} options Options used for the notification\r\n\t * @returns {SimpleNotification}\r\n\t */\r\n\tstatic warning(content, options = {}) {\r\n\t\treturn this.create(['gn-warning'], content, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a notification with the 'message' style\r\n\t * @param {Content} content Content of the notification\r\n\t * @param {Partial<Options>} options Options used for the notification\r\n\t * @returns {SimpleNotification}\r\n\t */\r\n\tstatic message(content, options = {}) {\r\n\t\treturn this.create(['gn-message'], content, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Make a notification with custom classes\r\n\t * @param {string[]} classes The classes of the notification\r\n\t * @param {Content} content Content of the notification\r\n\t * @param {Partial<Options>} options Options used for the notification\r\n\t * @returns {SimpleNotification}\r\n\t */\r\n\tstatic custom(classes, content, options = {}) {\r\n\t\treturn this.create(classes, content, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Add a tag for the textToNode function\r\n\t * @param {string} name The name of the tag\r\n\t * @param {TagDescription} object The values of the tag\r\n\t */\r\n\tstatic addTag(name, object) {\r\n\t\tthis.tags[name] = object;\r\n\t\tthis.refreshTokens = true;\r\n\t}\r\n}\r\n/**\r\n * @type {Object.<string, HTMLElement>}\r\n */\r\nSimpleNotification.wrappers = {};\r\n/**\r\n * @type {SimpleNotification[]}\r\n */\r\nSimpleNotification.displayed = [];\r\n/**\r\n * @type {Options}\r\n */\r\nSimpleNotification._options = {\r\n\tposition: 'top-right',\r\n\tmaxNotifications: 0,\r\n\tremoveAllOnDisplay: false,\r\n\tpauseOnHover: true,\r\n\tcloseOnClick: true,\r\n\tcloseButton: true,\r\n\tduration: 4000,\r\n\tsticky: false,\r\n\tevents: {\r\n\t\tonCreate: undefined,\r\n\t\tonDisplay: undefined,\r\n\t\tonDeath: undefined,\r\n\t\tonClose: undefined,\r\n\t},\r\n\tinsertAnimation: {\r\n\t\tname: 'default-insert',\r\n\t\tduration: 250,\r\n\t},\r\n\tremoveAnimation: {\r\n\t\tname: 'fadeout',\r\n\t\tduration: 400,\r\n\t},\r\n};\r\n/**\r\n * @type {Object.<string, TagDescription>}\r\n */\r\nSimpleNotification.tags = {\r\n\tcode: {\r\n\t\ttype: 'code',\r\n\t\tclass: 'gn-code',\r\n\t\topen: '``',\r\n\t\tclose: '``',\r\n\t\ttextContent: '$content',\r\n\t},\r\n\tfloatRight: {\r\n\t\ttype: 'span',\r\n\t\tclass: 'gn-float-right',\r\n\t\topen: '>*>',\r\n\t\tclose: '<',\r\n\t},\r\n\theader2: {\r\n\t\ttype: 'h2',\r\n\t\tclass: 'gn-header',\r\n\t\topen: '## ',\r\n\t\tclose: '\\n',\r\n\t},\r\n\theader1: {\r\n\t\ttype: 'h1',\r\n\t\tclass: 'gn-header',\r\n\t\topen: '# ',\r\n\t\tclose: '\\n',\r\n\t},\r\n\timage: {\r\n\t\ttype: 'img',\r\n\t\ttitle: true,\r\n\t\tattributes: {\r\n\t\t\tsrc: '$content',\r\n\t\t\ttitle: '$title',\r\n\t\t},\r\n\t\ttextContent: false,\r\n\t\topen: '![',\r\n\t\tclose: ']',\r\n\t},\r\n\tlink: {\r\n\t\ttype: 'a',\r\n\t\ttitle: true,\r\n\t\tattributes: {\r\n\t\t\thref: '$content',\r\n\t\t\ttarget: 'blank',\r\n\t\t\ttitle: '$title',\r\n\t\t},\r\n\t\ttextContent: '$title',\r\n\t\topen: '{{',\r\n\t\tclose: '}}',\r\n\t},\r\n\tbold: {\r\n\t\ttype: 'span',\r\n\t\tclass: 'gn-bold',\r\n\t\topen: '**',\r\n\t\tclose: '**',\r\n\t},\r\n\titalic: {\r\n\t\ttype: 'span',\r\n\t\tclass: 'gn-italic',\r\n\t\topen: '*',\r\n\t\tclose: '*',\r\n\t},\r\n\tseparator: {\r\n\t\ttype: 'div',\r\n\t\tclass: 'gn-separator',\r\n\t\ttextContent: false,\r\n\t\topen: '\\n---\\n',\r\n\t\tclose: '',\r\n\t},\r\n\tlinejump: {\r\n\t\ttype: 'br',\r\n\t\ttextContent: false,\r\n\t\topen: '\\n',\r\n\t\tclose: '',\r\n\t},\r\n};\r\n"],"names":["SimpleNotification","[object Object]","options","this","fragment","DocumentFragment","undefined","deepAssign","_options","events","node","title","closeButton","body","image","text","buttons","progressBar","addExtinguish","addExtinguishFct","bind","removeExtinguish","removeExtinguishFct","target","objs","i","max","length","k","position","wrapper","document","createElement","className","appendChild","wrappers","char","start","foundPos","indexOf","string","token","found","tag","end","tagLength","open","close","inside","str","substring","c","push","joinString","splice","arr","join","createTextNode","tagInfo","type","addEventListener","event","stopPropagation","content","foundTitleBreak","firstUnbreakChar","replace","keys","Object","attributes","attributeValue","setAttribute","textContent","textToNode","class","Array","isArray","classList","add","tokens","refreshTokens","tags","last","continueAt","openPos","closePos","searchToken","breakString","buildNode","classes","insertAnimation","name","removeAnimation","style","animationName","animationDuration","duration","forEach","remove","sticky","pauseOnHover","hasFocus","addFocusExtinguish","removeEventListener","onDeath","disableButtons","closeAnimated","closeOnClick","onCreate","contains","insertBefore","firstElementChild","src","addBody","firstChild","removeChild","value","button","onClick","removeAllOnDisplay","displayed","n","maxNotifications","diff","makeWrapper","onDisplay","index","fromUser","onClose","childNodes","disabled","notificationOptions","hasImage","hasText","hasTitle","hasButtons","notification","make","setTitle","addCloseButton","setImage","setText","addButton","addProgressBar","display","create","object","code","floatRight","header2","header1","link","href","bold","italic","separator","linejump"],"mappings":"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"}